{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "Allows the vault owner to stake their tokens to a validator.",
      "type": "object",
      "required": [
        "delegate"
      ],
      "properties": {
        "delegate": {
          "type": "object",
          "required": [
            "amount",
            "validator"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "validator": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to redelegate their staked tokens to another validator.",
      "type": "object",
      "required": [
        "redelegate"
      ],
      "properties": {
        "redelegate": {
          "type": "object",
          "required": [
            "amount",
            "dst_validator",
            "src_validator"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "dst_validator": {
              "type": "string"
            },
            "src_validator": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to un-stake their tokens from a validator.",
      "type": "object",
      "required": [
        "undelegate"
      ],
      "properties": {
        "undelegate": {
          "type": "object",
          "required": [
            "amount",
            "validator"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "validator": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to open a liquidity request option",
      "type": "object",
      "required": [
        "request_liquidity"
      ],
      "properties": {
        "request_liquidity": {
          "type": "object",
          "required": [
            "option"
          ],
          "properties": {
            "option": {
              "$ref": "#/definitions/LiquidityRequestMsg"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to close a liquidity request before the offer is accepted by lenders.",
      "type": "object",
      "required": [
        "close_pending_liquidity_request"
      ],
      "properties": {
        "close_pending_liquidity_request": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows a lender to accept the pending liquidity request.",
      "type": "object",
      "required": [
        "accept_liquidity_request"
      ],
      "properties": {
        "accept_liquidity_request": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_delegator_rewards"
      ],
      "properties": {
        "claim_delegator_rewards": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to repay the amount borrowed from the lender before a liquidation event is trigged by the lender",
      "type": "object",
      "required": [
        "repay_loan"
      ],
      "properties": {
        "repay_loan": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner/lender to liquidate collateral which may include unstaking the outstanding amount owed to the lender. after all free balance is spent.",
      "type": "object",
      "required": [
        "liquidate_collateral"
      ],
      "properties": {
        "liquidate_collateral": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows vault owner/lender to cast a simple vote",
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "proposal_id",
            "vote"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "vote": {
              "$ref": "#/definitions/VoteOption"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows a vault owner to transfer ownership to another user.",
      "type": "object",
      "required": [
        "transfer_ownership"
      ],
      "properties": {
        "transfer_ownership": {
          "type": "object",
          "required": [
            "to_address"
          ],
          "properties": {
            "to_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows the vault owner to withdraw funds from the vault. While liquidation is processing, the lender's withdrawal is prioritized over the vault's owner.",
      "type": "object",
      "required": [
        "withdraw_balance"
      ],
      "properties": {
        "withdraw_balance": {
          "type": "object",
          "required": [
            "funds"
          ],
          "properties": {
            "funds": {
              "$ref": "#/definitions/Coin"
            },
            "to_address": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "LiquidityRequestMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "fixed_term_rental"
          ],
          "properties": {
            "fixed_term_rental": {
              "type": "object",
              "required": [
                "can_cast_vote",
                "duration_in_seconds",
                "requested_amount"
              ],
              "properties": {
                "can_cast_vote": {
                  "type": "boolean"
                },
                "duration_in_seconds": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "requested_amount": {
                  "$ref": "#/definitions/Coin"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "fixed_interest_rental"
          ],
          "properties": {
            "fixed_interest_rental": {
              "type": "object",
              "required": [
                "can_cast_vote",
                "claimable_tokens",
                "requested_amount"
              ],
              "properties": {
                "can_cast_vote": {
                  "type": "boolean"
                },
                "claimable_tokens": {
                  "$ref": "#/definitions/Uint128"
                },
                "requested_amount": {
                  "$ref": "#/definitions/Coin"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "fixed_term_loan"
          ],
          "properties": {
            "fixed_term_loan": {
              "type": "object",
              "required": [
                "collateral_amount",
                "duration_in_seconds",
                "interest_amount",
                "requested_amount"
              ],
              "properties": {
                "collateral_amount": {
                  "description": "Implicitly denominated in bonded_denom",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    }
                  ]
                },
                "duration_in_seconds": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "interest_amount": {
                  "description": "Implicitly denominated in requested_amount.denom",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    }
                  ]
                },
                "requested_amount": {
                  "$ref": "#/definitions/Coin"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VoteOption": {
      "type": "string",
      "enum": [
        "yes",
        "no",
        "abstain",
        "no_with_veto"
      ]
    }
  }
}
